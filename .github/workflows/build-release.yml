name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for changes in package.json
        run: |
          git diff --cached --diff-filter=d package.json || {
            echo "No changes to package.json"
            exit 1
          }

      - name: Get version number from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "::set-output name=version::$VERSION"

      - name: Create batch script to download and install
        run: |
            VERSION=${{ steps.get_version.outputs.version }}
            echo @echo off > install.bat
            echo set TEMP_DIR=%%TEMP%% >> install.bat
            echo curl -L -o %%TEMP_DIR%%\${VERSION}.zip https://github.com/notguoxin/custom-webui/archive/refs/tags/v${VERSION}.zip >> install.bat
            echo pip install --upgrade %%TEMP_DIR%%\${VERSION}.zip >> install.bat
            echo del /s /f /q %%TEMP_DIR%%\${VERSION}.zip >> install.bat

      - name: Create GitHub release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${{ steps.get_version.outputs.version }}`,
              name: `v${{ steps.get_version.outputs.version }}`,
              body: "Automated release",
            });
            const uploadUrl = release.data.upload_url;
            const filePath = path.resolve('./install.bat');
            const stat = fs.statSync(filePath);
            await github.rest.repos.uploadReleaseAsset({
              url: uploadUrl,
              headers: {
                'content-length': stat.size,
                'content-type': 'application/octet-stream',
              },
              name: 'install.bat',
              data: fs.readFileSync(filePath),
            });
            console.log(`Created release ${release.data.html_url}`);

      - name: Upload artifacts to release
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            .
            !.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
