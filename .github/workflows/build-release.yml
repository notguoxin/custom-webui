name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version number from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "::set-output name=version::$VERSION"

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      
      - name: Clean npm cache
        id: clean_cache
        run: npm cache clean --force
        
      - name: Build
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.clean_cache.conclusion == 'success'

      - name: Create GitHub release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${{ steps.get_version.outputs.version }}`,
              name: `v${{ steps.get_version.outputs.version }}`,
              body: "",
            });
            const uploadUrl = release.data.upload_url;
            const filePath = path.join('dist', `open_webui-${{ steps.get_version.outputs.version }}-py3-none-any.whl`);
            const stat = fs.statSync(filePath);
            await github.rest.repos.uploadReleaseAsset({
              url: uploadUrl,
              headers: {
                'content-length': stat.size,
                'content-type': 'application/octet-stream',
              },
              name: path.basename(filePath),
              data: fs.readFileSync(filePath),
            });
            console.log(`Created release ${release.data.html_url}`);

      - name: Upload artifacts to release
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: |
            .
            !.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}